#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

# Этот блок конфигурации добавляет HTTP-интерфейс для мониторинга статистики HAProxy, 
# обеспечивая доступ к информации о текущей производительности и состоянии балансировки.

# http://192.168.0.149:8399/stats_secure
frontend stats
        bind *:8399
        stats enable
        stats uri /stats_secure
        stats refresh 10s
        stats admin if LOCALHOST
        stats auth admin:admin # Change to your desired logins

# Ip Адаптера на HaProxy Сервере (входящие подключения для etcd)
frontend etcha200-main # For ETCD
    bind 192.168.0.149:2379 # Change to your network
#    retries 3
    mode tcp
    option tcplog
    default_backend etcha200-main-backend

# Ip Адаптера на HaProxy Сервере (входящие подключения для control plane)
frontend kubeha200lb # For master cluster
        bind 192.168.0.149:6443 # Change to your network
#        retries 3
        mode tcp
        option tcplog
        default_backend kubha200-masters

# Куда посылаем трафик для etcd
backend etcha200-main-backend
        mode tcp
        balance roundrobin
        option tcp-check

        server kub-master-01 192.168.0.150:2379 check fall 3 rise 2 # Change to your ETCD servers

# Куда посылаем трафик для control plane
backend kubha200-masters
        mode tcp
        balance roundrobin
        option httpchk GET /healthz
        http-check expect status 200    # Expect a 200 OK response for a healthy server
        timeout connect 5s       # Increase the timeout for establishing connections
        timeout server 60s       # Increase the timeout for waiting for a response from the server
        timeout check 10s        # Increase the timeout for health checks
        option tcp-check

        server kub-master-01 192.168.0.150:6443 check fall 3 rise 2 # Change to your master servers

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
# frontend main
#     bind *:5000
#     acl url_static       path_beg       -i /static /images /javascript /stylesheets
#     acl url_static       path_end       -i .jpg .gif .png .css .js

#     use_backend static          if url_static
#     default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
# backend static
#     balance     roundrobin
#     server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
# backend app
#     balance     roundrobin
#     server  app1 127.0.0.1:5001 check
#     server  app2 127.0.0.1:5002 check
#     server  app3 127.0.0.1:5003 check
#     server  app4 127.0.0.1:5004 check
